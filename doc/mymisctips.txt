*mymisctips.txt* My Tips Collection --- for daily use, powerful tools :)

Author: WangWei (linsong.qizi AT gmail DOT com)
For Almost every version VIM 
Last change: 10/12/2004 Tue 
      
                           Contents 
      Common tips                           |tips|
          locale                            |tips-locale|
          vim-encoding                      |tips-vim-encoding|
          vim-install                       |tips-vim-install|
          get-vim-tips                      |tips-get-vim-tips|
      Python-tips                           |python-tips|
          Twisted                           |python-twisted|
      Linux                                 |linux| 
          Shell                             |linux-Shell|
          Debian                            |linux-Debian|
          Gnome                             |linux-Gnome|
          readline                          |linux-readline|
          ssh                               |linux-ssh|
          XWindow                           |linux-xwindow|
          ctags                             |linux-ctags|
          files                             |linux-files|
          mplayer                           |linux-mplayer|
          par                               |linux-par|
          wget                              |linux-wget|
      Network                               |my-network|
          netcat                            |my-network-netcat|
      DataBase                              |database|
          sql                               |database-sql|
      Mac                                   |Mac|
          mplayer                           |Mac-mplayer|


*tips*
===============================================================================
                                           *cygrunsrv*
NO 1. how to use cygrunsrv

   start a windows service:
   $ cygrunsrv -S sshd ~
   query a windows service started or not:
   $ cygrunsrv -Q sshd ~
   stop a windows service:
   $ cygrunsrv -E sshd ~
   exceptions: 
   for httpd, use the following command to start:
   cygrunsrv -S httpd ~
   use the following command to stop:
   kill -TERM `cat /var/run/httpd.pid`  ~
   
===============================================================================
                                            *linux_dir_condition*
NO 2. about linux dir condition

   /usr : all files and tools related to users
   /usr/bin : binary  file
   /usr/share : all files and tools available for all users are installed here
   /usr/share/doc : tools' general documents 
   /usr/share/doc/Cygwin : tools' documents specific about cygwin port
   /etc : tools configurations
   
===============================================================================
                                                   *my-rsync*
NO 3. use rsync to syncnize files

example: >

      rsync -auv /cygdrive/d/tools/GNU_Tools/ /cygdrive/f/tools/GNU_Tools/
      synchronize the folder d:/tools/GNU_Tools/ and f:/tools/GNU_Tools/
      ATTENTION: slash of GNU_Tools/ is needed.

for example: >

      rsync.exe -auv A/ B

will copy all files in dir A to dir B
for options detail,use man rsync
   
ATTENTION: the following command is NOT the same as the above >
  rsync.exe -auv A B 
this command will make a dir A in dir B

===============================================================================
                                            *mkisofs* *ISO*
NO 4. use mkisofs to make a ISO image
>
   mkisofs -o ~/test.iso -J -R ~/tools

add all files in ~/tools into ~/test.iso image.

===============================================================================
                                            *py2exe*
NO 5. how to use py2exe to make python script into executable files


    make a file named setup.py in the script directory,then copy the following lines into the setup.py file:
    #================================================
    from distutils.core import setup
    import py2exe
    setup( 
        # The first three parameters are not required, if at least a
        # 'version' is given, then a versioninfo resource is built from
        # them and added to the executables.
        version = "0.5.0",
        description = "py2exe sample script",
        name = "py2exe samples",
        # targets to build
            console = ["linsong.py"],
        )
    #================================================
===============================================================================
                                       *here_document*
NO 6. "here document" can automate my job!

for example: >
 $vim hello.txt <<END
 >%s/foo/bar/g
 >:wq
 >END
 
this is another example: >
 $lftp <<END
 >bookmark list
 >ls
 >bye
 >END
By here document,we can write script for tools(vim,lftp,mutt etc) that require users input.  
===============================================================================
                                            *apt-get*
NO 7. HOW-TO use apt-get to install package?

      apt-get is a application for install packages from CD-ROM or network for Debian and Ubuntu linux distributions. It is highly customizable and very useful. The usage is very simple,just like  the followings:
          $ apt-get install ipython   # install ipython and apt-get will save the downloaded package into /var/cache/apt/archives  
          $ apt-get source ipython    # get the source tarball of ipython only
     for more detail, call man apt-get  

===============================================================================
                                            *list-pci-device* *list-usb-device*
NO 8. HOW-TO list all pci/usb device ?

     for example: >
        $ lspci  -vbx # list all PCI device and the format is readable by XFree use lspci --help for more options
        $ lsusb    # list all usb device

===============================================================================
                                           *add_font*
NO 9. HOW-TO add a font ?

     for example:
        Just copy the font file in ~/.fonts, and run "fc-cache" once. This should work on every Unix system with fontconfig installed. Afterwards, you can start gvim and choose the font or insert "set guifont=ProggyCleanTT\ 12" in your .gvimrc. 

===============================================================================
                                            *gui-install-package*
NO 10. HOW-TO install/uninstall packages with a GUI application?

       System -> Administration -> Synaptic Package Manager
      It is just like the cygwin's setup :)

      
===============================================================================
                                            *switch-user*
NO 11. HOW-TO switch to another user with that user's passwd

       1. swich to root >
          $ su 
          $ su <anotheruserid>

===============================================================================
                                            *install-laszlo*
NO 12. HOW-TO install laszlo

      1. first install java, the importang thing is: You must set the $JAVA_HOME to the correct dir
      2. install openlaslo from www.openlaszlo.org
      3. under linux, need to install gsfonts-x11(fonts used by laszlo) 
      perhaps that's all

NO l3. HOW-TO send mails from a mail server that owns a dynamic IP
      google rbl( Short for Realtime Blackhole List ), then we can get some website that introduce something about rbl, by  this way, perhaps we can find some server that provide email relay server for our ad emails.

===============================================================================
                                                    *exchange_keys*
NO 14. HOW-TO exchange Caps_Lock and Escape under linux and Windows?

For Linux:
put the following lines into a file, for example, create a file named .keywrapper >
    -----------start------------
    ! Swap caps lock and escape
    remove Lock = Caps_Lock
    keysym Escape = Caps_Lock
    keysym Caps_Lock = Escape
    add Lock = Caps_Lock
    ------------end-------------
then use the following command to apply the key exchange:
$ xmodmap .keywrapper
and we can put the command into .xinitrc or similiar startup file.

If you want to use the capslock as escape on the console as opposed to just in X, try: >

    =======================================
     loadkeys ~/keymap
     
     where ~/keymap contains:
     
     ---------->8----------
     keycode 58 = Escape
     ----------8<----------
     
     Or, if you want to completely swap them:
     
     ---------->8----------
     keycode 1 = Caps_Lock
     keycode 58 = Escape
     ----------8<----------
     
     see 'man 5 keymaps', and verify with 'dumpkeys' that keycode 1 is Escape and keycode 58 is Caps_Lock beforehand :)
    =======================================


For Windows: >
    -------start
    REGEDIT4

    [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
    "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,01,00,3a,00,00,00,00,00
    --------end 
===============================================================================
                                            *create-tags*
NO 15. HOW-TO create a tags file for a project

1. use find ,sed tools to get a fileslist for project
2. use the following command to create a tags file >
   $ ctags -L FILESLIST

===============================================================================
                                            *network-traffic*
NO 16. HOW-TO analyze the network traffic problem?

      use the following tools to do this:
      1. ethereal: with a nice GUI, works under linux(perhaps windows)
      2. tcpdump: works under linux and windows(named windump)
      3. tcpwatch: python script 

===============================================================================
                                            *X-tools*
NO 17. some tools about X window

     Xvfb - a X window free buffer tools, emulate a X server but it is not visible.
     Xnest - another X window server, as for the real X window server,it is a X client; but for the tools that use it as a server, it works just as a X server, for more detail, man Xnest,man X

===============================================================================
                                            *shell-read*
NO 18. HOW-TO use the 'read' shell command to read lines

the read shell command read every lines from stdin using \n as the
seperator, so it can read a line with spaces. >

    ls -1 | while read line 
    do
        echo $line
    done

also, we can use gawk to do this kinds of work: >

    gawk -F'\n' '{ print }' filename

===============================================================================
                                            *gnuplot*
NO 19. HOW-TO use GnuPlot 

Homesite of GnuPlot: http://gnuplot.sf.net >
    the following commands will plot function sin(x+10), and also draw the grids
        $ gnuplot 
        gnuplot> plot sin(x+10) with linespoints
        gnuplot> set grid
        gnuplot> replot

also, we can plot some data from a outfile like this: >
        $ gnuplot
        gnuplot> plot "data.dat" 1:2 title "data plot" with line 1,
                      "data.dat" 1:($2+$3) title "test" with boxes fs solid 0.1
in the datafile, the first column as the x axis and the second column as y axis in the first graph; in the second graph, the first column as the x axis and the sum(2,3) as the y axis;

===============================================================================
                                            *ssh*  *intranet* 
NO 20. ssh ä½¿ç¨æ°æ³ï¼å¬ç½(åæ³ ip)ç¨æ·è®¿é®åç½(ç§æ ip)æå¡å¨

    ssh ä½¿ç¨æ°æ³ï¼å¬ç½(åæ³ ip)ç¨æ·è®¿é®åç½(ç§æ ip)æå¡å¨(http,ftp,sshd,cvs...),åç½çæåä¸å¦¨ä¸ç

    quanliking@linuxsir

    åç½çæåè¦äºæ²¡æåæ³ ip,ä¸è½å¯¹å¤æä¾ internet æå¡ãè§£å³æ¹æ¡å¾å¤ï¼å¯ä»¥éè¿å¨ç½å³åç«¯å£æ å°ï¼æå¶ä»çè¾å©è½¯ä»¶ç­ã

    æ¬æä»ç»ä¸¤ç§æ¯è¾ç®åå®ç¨çæ¹æ³ï¼å©ç¨ ssh è¿ä¸ªå¼ºå¤§çå·¥å·ã
    (ä»¥ä¸æ¹æ³ä¸åå¹³å°ï¼é½éç¨)

    æ¡ä¾ä¸ã
    åç½ä¸»æº A ,å¼äº http,ftp ,http ,vnc,sshd,socks5,cvs ç­æå¡ãæ åæ³ ip å°åã
    å¤ç½ä¸»æº B ,å¼äº sshd æå¡ãæåæ³ ip : 218.xxx.xxx.xxx
    æä»¬çç®çæ¯è®© B è½è®¿é® A ä¸çåç§æå¡ã

    æ­¥éª¤ï¼
    1ãA ç¥é B ip åï¼åç¨ ssh client è¿ä¸ Bï¼å½ä»¤å¦ä¸ï¼
    ssh -R 1234:localhost:21 -l root 218.xxx.xxx.xxx

    è§£éï¼
    å³äº ssh çåæ°ï¼è¯·ç ssh --help
    -L listen-port:host:port Forward local port to remote address
    -R listen-port:host:port Forward remote port to local address
    -L local (æ¬å°) -R ï¼remote (è¿ç¨)

    -R 1234:localhost:21 å¶å®åäºä¸ªâç«¯å£è½¬å(forward)"ã
    æææ¯ä¸»æº A ææ¬å°ç 21ç«¯å£(å¯¹åºftpæå¡)æ å°ä¸º B ç1234 ç«¯å£(ä»»ææªè¢«å ç¨)ï¼åæ¶ A çå¬ B ç1234 ç«¯å£ã
    å¨ B ä¸ç¨ netstat -al | grep 1234 ï¼ä½ è½çå°è¿ä¸ªçå¬è¿æ¥ã
    ä»»ä½åéå° B 1234 ç«¯å£çè¯·æ±å°è¢«ä¼ éå° Aç 21 ç«¯å£ã

    2ãB ç¨ ftp å·¥å·(ä»»æ,å¦gftp) è¿æ¬å°ç 1234 ç«¯å£ï¼è¾å¥ A ç ftp ç¨æ·åå¯ç ã
    ftp localhost 1234

    åä¸ä¸è¦è§çå¥æªï¼ä¸ºä»ä¹è¿çæ¯æ¬å°çå°åã
    ä¸¾ä¸ªä¸æ°å½ä¾å­ï¼ç¸å½äº A å¨ B çæ¿é´éè£äºä¸ªçªå¬å¨(çå¬ç«¯å£)ï¼é£ä¹ B å¨æ¿é´éè¯´çè¯å°±éè¿çªå¬å¨ä¼ éå°äº Aã

    3ãæ¨å¹¿ï¼
    å¦æ B æ²¡å ç¨ 21 ç«¯å£çè¯ï¼é£ä¹å¯ä»¥åæï¼
    Aä½¿ç¨ï¼ ssh -R 21:localhost:21 -l root 218.xxx.xxx.xxx
    Bä½¿ç¨ï¼ ftp localhost

    å¦æä½ æ³ä½¿ç¨ A ä¸ç http æå¶ä»æå¡ï¼åªéæ¹åæå¡ç«¯å£ï¼
    httpæå¡ ï¼
    Aä½¿ç¨ï¼ssh -R 1234:localhost:80 -l root 218.xxx.xxx.xxx
    Bä½¿ç¨ï¼w3m http://localhost:1234

    sshdæå¡ï¼
    Aä½¿ç¨ï¼ssh -R 1234:localhost:22 -l root 218.xxx.xxx.xxx
    Bä½¿ç¨ï¼ssh localhost -p 1234

    vnc æå¡ï¼
    Aä½¿ç¨ï¼ssh -R 1234:localhost:5901(å¶ä») -l root 218.xxx.xxx.xxx
    Bä½¿ç¨ï¼vncviewer localhost:1

    socks5æå¡ï¼
    Aä½¿ç¨ï¼ssh -R 1234:localhost:1080 -l root 218.xxx.xxx.xxx
    B ç¥
    cvs æå¡ï¼
    Aä½¿ç¨ï¼ssh -R 1234:localhost:2401 -l root 218.xxx.xxx.xxx
    Bä½¿ç¨ï¼cvs -d pserver:root@localhost:1234/home/cvsroot login

    è¿éæ¯å¦ä¸å®è¦ç¨ root ,æ¶åå°æéé®é¢ï¼å·ä½è¿å¾é å¤§å®¶æ¥æ»ç»ç»éªã

    æ¡ä¾äºã
    é¨åæåä¼é®äºï¼è¿æ ·çè¯åªæ¯ä¸¤å°æºå¨çäºç¸éè®¯ï¼å¦ä½è®©å¹¿åç½çäººé½è½è®¿é®å¢ï¼
    èªæçä½ ï¼è¿æ¶åå¯è½å·²ç»æäºç­æ¡ã

    åç½ä¸»æº A ,å¼äº http,ftp ,http ,vnc,sshd,socks5,cvsç­æå¡ãæ åæ³ ip å°åã
    å¤ç½ä¸»æº B ,å¼äº sshd æå¡ãæåæ³ ip : 218.xxx.xxx.xxx
    æä»¬çç®çæ¯è®© internet ä¸çä»»ä½ä¸»æºè½è®¿é® A ä¸çåç§æå¡ã

    æ­¥éª¤ï¼
    1ãé¦åï¼B çsshd æå¡ç«¯åç¹å°å°çè®¾ç½®ï¼
    vi /etc/ssh/sshd.config
    å å¥ GatewayPorts yes
    ç¶åéå¯ sshd æå¡ï¼ /etc /init.d/ssh restart æ /etc/init.d/sshd restart
    (è§£éï¼
    ä¸å ï¼é»è®¤ä¼æçå¬ç«¯å£ç»å®å¨ localhost æ lo(127.0.0.1)ï¼è¿æ ·é¤äº Bèªèº«å«äººæ¯æ²¡æ³è®¿é®çå¬ç«¯å£çã
    å å¥ GatewayPorts yesï¼æçå¬ç«¯å£ç»å®å° 0.0.0.0 ,è¿æ ·å¤é¨çæææºå¨é½è½è®¿é®å°è¿ä¸ªçå¬ç«¯å£ã
    ä¸»è¦æ¯èèå®å¨æ§é®é¢ï¼é»è®¤æåµï¼åªåè®¸æ¬å°è®¿é®ã

    è¿éææ¯çæ­£çé¾ç¹ï¼å®éªäºä¸ä¸ªæä¸ï¼ç´¯äººåï¼ç»ç¹é¼å±å§ ï¼)

    2ãA ç¥é B ip åï¼åç¨ ssh client è¿ä¸ Bï¼å½ä»¤å¦ä¸ï¼
    ssh -R 21:localhost:21 -l root 218.xxx.xxx.xxx
    (äºåç¡®å® B ç21 ç«¯å£æªè¢«å ç¨)

    3ãåå¸å¨ internet çå¶å®å®¢æ·æºä½¿ç¨ ftp å·¥å·(ä»»æ)ï¼è¿ B 21ç«¯å£ã

    ftp 218.xxx.xxx.xxx 21

    ä½ ä¼åç°èªå·±è¿ä¸äºåç½ A çftp æå¡ã

    æ­¤æ³åæ¡ä¾ä¸å®å¨ä¸æ ·ã

    internet --------->> B 21 ç«¯å£----------->>A 21ç«¯å£
    å¯ä»¥å«åç«¯å£è½¬åï¼æé§éææ¯ï¼ä¹å¯ä»¥ç§°ä¹ä¸ºè·³æ¿(B)ï¼æåå¼¹ ãåµåµï¼æçè¯´çããã

    å¯è½éå°çé®é¢ï¼

    Country:/etc# ssh localhost -p 1234
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
    Someone could be eavesdropping on you right now (man-in-the-middle attack)!
    It is also possible that the RSA host key has just been changed.
    The fingerprint for the RSA key sent by the remote host is
    be:5f:d2:45:66:4d:0c:9e:2b:6b:45:65:a7:b2:85:28.
    Please contact your system administrator.
    Add correct host key in /root/.ssh/known_hosts to get rid of this message.
    Offending key in /root/.ssh/known_hosts:11
    RSA host key for localhost has changed and you have requested strict checking.
    Host key verification failed.
    Country:/etc# ssh localhost -p 1234
    root@localhost's password:
    Last login: Mon May 5 02:39:53 2003 from localhost
    localhost root #

    å¦ä¸é®é¢ï¼è¯·å é¤ ~/.ssh/known_hostsï¼ç¶ååè¯ã

    ç¹è¯ï¼
    å½ç¶ ssh è¿æå¾å¤çåè½æ²¡æç¨ï¼å¦åç¨ ssh è¿æ¥ ä¸å»åï¼å¯ä»¥ç¨ scpå½ä»¤æ¥å­åæä»¶ï¼ç­ç­ã
    scp -P xxx user@host:path/file

    å¶å®çªç ´ç½å³ä¼ éæä»¶çæ¹å¼ä¹ååä¸åã
    ä¼ç¹æ¯ï¼
    å¯ä»¥çªç ´ç½å³ï¼ä¸è¬æåµä¸ï¼åç½ç®¡è¦æ±å¨ç½å³ä¸ç»ä½ åç«¯å£æ å°æ¯ä¸ç°å®çï¼ä½ç¨æ­¤æ³ä½ å¯ä»¥è®©è¦å¥½çæåç»ä½ åã
    ä½¿ç¨æ¹æ¡ä¸ï¼æ¯è¾ç¹å¯¹ç¹ä¼ éæä»¶æ¯è¾æ¹ä¾¿ï¼æä½¿ç¨sshè¿è¡è¿ç¨æ§å¶åç½ã
    sshæ¬èº«æ¯å å¯ï¼ä¿è¯å®å¨å¯é ã

    ç¼ºç¹ä¹ä¸å°ï¼
    ä½¿ç¨ ssh å å¯ï¼å¿å¿å½±åæ§è½ï¼å¯ä»¥ç¨ -C éé¡¹è°èåç¼©çã
    å¦æè±¡æ¹æ¡äºä½¿ç¨é¢å¤çæå¡å¨ï¼æ°æ®é½è¦æå¡å¨ä¸­è½¬(ææ¯è¿æ ·è®¤ä¸ºï¼æ²¡è·è¸ªè¿)ï¼å¿å¿å½±åéåº¦ã
    å¬ç½çæå¡å¨ä¸å¥½æ¾ã

===============================================================================
                                            *firefox-plugin*
NO 20. HOW-TO get information about firefox 

    in firefox location bar: 
    about:plugins  # get all information about plugins
    about:config   # get all information about all config

===============================================================================
                                            *twisted-debug*
NO 21. Something about twisted 

    1) by "import pdb; pdb.set_trace()" we can debug source codes that use twisted framework.
    2) twistd is a command to manage twisted, use <
        twistd --help 
    to get more details
    3) command " twistd -b " will make twisted run under pdb and whenever there are some exception, we will go into pdb.
   visit http://twistedmatrix.com/projects/core/documentation/howto/application.html for more details about twisted service.

===============================================================================
                                            *linux-service*
NO 22. HOW-To run linux service 

Everytime when linux is booted, it will search all the /etc/rc0-rc6 folder to start all service, rc0 for root level serivice, rc1 for level next below root level, and so on. all the files in /etc/rc* folder are links that link to start application in /etc/init.d folder, and all the start application can receive "start"/stop as parameters .
For example: we put ssh start script into folder /etc/init.d, and we want to run ssh with level 3, then we make a link named S20ssh to point to /etc/init.d/ssh file, then we are done.

*Reference: <<Linux administration handbook>>
===============================================================================
                                            *sed*
NO 23. About sed 
swapping word's in stream (I know, you don't need the cat) >
    cat Myfile.h|sed 's/foo/fyy/g'

===============================================================================
                                            *postgresql* *pg_dump* *pg_ctl* 
NO 24. how to handle postgresql 
postgresql provides some useful tools for daily work, for example: dump database(dump all content of database(s), including tables,views,index,data etc into a sql text file, and then you can edit the dump file with editor,very amazing! :), restore database(restore a database from a db dump file), start/stop/restart/status postmaster etc
    for example: >
    To dump a database:
    $ pg_dump mydb > db.out

To reload this database (with large objects) to an existing database called newdb: >
      $ pg_restore -d newdb db.tar
use the above method, we can move a database from computer A to computer B freely!
  
start postmaster process >
      $ pg_ctl start 
===============================================================================
                                            *mount* *smbfs* 
NO 25. how to mount remote filesystem
how to mount remote filesystem >
    sudo mount -t smbfs -o username=vincent //exobox/exoweb /exobox
===============================================================================
                                            *rfc* *protocol* *internet* *tcp/ip*
NO 26. RFC 
    IRC: http://www.ietf.org/rfc/rfc1459.txt?number=1459
   POP3: http://www.ietf.org/rfc/rfc1939.txt?number=1939
  IMAP4: http://www.ietf.org/rfc/rfc3348.txt?number=3348
   
  visit  http://www.ietf.org/ for more details
===============================================================================
                                            *GraphViz* *dot* *GnuPlot*
                                            *ImageMagick*
NO 27. How to use GraphViz to generate graphs

Graph is different from image, graph display curve, line, box according to
given data, it is another representation way of data; but image is only
pictures, for example, a image display a person etc. 

So GraphViz is a kinds of tool for generating graph from given data; GnuPlot is
another kind of tool for this purpose;

ImageMagick is a kind of tool for displaying, handling images, a little like
photoshop or gimp, except that ImageMagick is easier to automate because it is
a command line tool.

===============================================================================
                                            *shell* *environment-virable*
NO 28. How to set environment virables for a process life time?

When we want to set some environment virables that will only exist for session, do it as the following: >
    RTSERVER=http://rt2.exowet.net; RTUSER=robot; RTPASSWD=robot_pass; rt show ticket/2022

$RTSERVER, $RTUSER and $RTPASSWD only exist during rt command is running, after rt exit, they will disappear.

===============================================================================
                                            *CUJ* *access-code*
NO 29. ID code to access CUJ online journel

Code: CP1005K9
Thanks to greg! 
===============================================================================
                                            *ssh-multiplex* *session*
NO 30. SSH Session Multiplexing

The purpose of ssh multiplexing is that after the first client is authenticated by server,
then the following connection sessions to the same server will need not to be
authenticated again, that will make the connections, that connect to the same server after
the first connection, will be very fast.

For more detail, visit http://www.littleredbat.net/mk/blog/story/29/
===============================================================================
                                             *kernel-module* 
NO 31. How to load a module when system start up?
add /etc/modules and add the module that you want to be loaded when system starts up. And the configure file is very simple, from the comment we can get enough help.
===============================================================================
                                                *sshfs* *FUSE*
NO 32. How to run sshfs? 

sshfs is a very awesome and cool tool! Try it and you will love it! visit http://opensource.weblogsinc.com/2005/11/03/mount-remote-drives-via-ssh-with-sshfs/ for more details.
The simple steps is: 
   1. load FUSE mode: 
      sudo modprobe fuse ~
   2. mount the remote directory 
      //sshfs [USER:]REMOTE_HOST:[REMOTE_DIR] MOUNT_DIR
      sshfs vincent:box.exoweb.net:~ ~/sshfs/box ~
   3. use the mounted files ...
   4. unmount remote directory
      //fusermount -u MOUNT_DIR
      fusermount -u ~/sshfs/box ~
===============================================================================
                                            *X* *X-Window*
NO 33. A good sequence to learn X window from man page
  1. man startx 
  2. man 5 XSession
  3. ...
===============================================================================
                                            *netstat* 
NO 32. tips for netstat

   $ netstat -tunl       # list all ports that is listened by program ~
   $ sudo netstat -tunlp # also list the  programs' name  ~
   $ netstat -r          # display the route table ~

   for more tips, read the help of netstat :)

===============================================================================
                                            *linux-font* 
NO 33. windows fonts for linux
   msttcorefonts is debian package of windows truetype fonts for linux
===============================================================================
                                            *gprog*
NO 34. use grof to debug the performance problem 

    a very powerful tool that can help to analyze the profile data in order to 
debugging the performance problem. Man gprof for more details.
===============================================================================
                                            *tips-locale*
# understand what is locale? 
  visit http://svnbook.red-bean.com/en/1.1/svn-book.html#svn-ch-7-sect-5,
  there is a very good description for locale.

===============================================================================
                                            *tips-vim-encoding*
# what does the encoding related options mean ? 
  'encoding' : this option will set the internal encoding for vim, vim will
  use this encoding for viminfo, content of register and all other vim
  internal text.

  'fileencodings' : this option is a list of candicate fileencodings, when vim
  open a file, it will try encodings in the list one by one until it finds the
  right one and vim will set the encoding it found to 'fileencoding'

  'fileencoding' : when open a file, vim will set local 'fileencoding' by
  detect the encoding of the file; after the file is opened, you can change
  this option, for example, change it from 'cp936' to 'utf-8', vim will do the
  encoding convertion(in fact, vim will use iconv underway). After you change
  the 'fileencoding' option, the status line will show a sign indicating the
  opened file is modified; when you create a new file in vim, the new file
  will use the current 'fileencoding' option, if you have not modify
  'fileencoding', its value will be empty, so vim will use value of 'encoding'
  option; So to change one files encoding, you'd better to use :setlocal
  command instead of :set, because :set will change the global 'fileencoding',
  the later created new files will be affected, but :setlocal will only change
  the local 'fileencoding'. 

  'termencoding' : When use input method to input chinese into vim, typed
  characters arrive in the encoding of your original language.  This requires
  converting them to Unicode.  Tell Vim the language from which to convert
  with the 'termencoding' option.  You can do it like this: 
	:let &termencoding = &encoding ~
	:set encoding=utf-8 ~
  This assigns the old value of 'encoding' to 'termencoding' before setting
  'encoding' to utf-8.  You will have to try out if this really works for your
  setup.  It should work especially well when using an input method for an Asian
  language, and you want to edit Unicode text.

===============================================================================
                                            *tips-vim-install*
  vim7-install.sh --enable-perlinterp --enable-pythoninterp --enable-cscope
  --enable-multibyte --with-compiledby="Vincent Wang(vincent@exoweb.net)"

===============================================================================
                                            *tips-get-vim-tips*
  use the following command to get a vim tips from vim's homesite 
w3m -dump http://vim.sourceforge.net/tips/tip.php?tip_id=100 |cut -c 28- | sed -ne '1,4d
/^\s*\[Add Note\]/Q
p' 


===============================================================================
 


*linux*

*linux-Shell*
===============================================================================
 * how to handle space in file's name
   Code1: 
      for file in *   # here shell will save every file's name into variable
                      # file even the file's name includes space.  
      do 
          echo "$file" # quoting the variable is good under any case
      done 

   Code2:
      for file in $(find . -type f -iname "foo*")
      do
          echo "$file" 
      done
   For Code2, shell will split the result of 'find . -type f -iname "foo*"'
   based on space and save them into variable file. 
   
   The difference between Code1 and Code2 is: the source for "for" is
   different, for Code1, it is files; for Code2, it is string. So the way to
   split the source and save into variable is different.

   Code3: [comes from http://www.macgeekery.com/tips/cli/handling_filenames_with_spaces_in_bash]
      find . -name '* *' -print0 | xargs -0 -n 1 -I % echo % 

      You need the "-print0" and "-0" to delimit things with zeros instead of spaces.
      You need "-n 1" to do them one at a time instead of as many as will fit in a command line.
      You need "-I %" to put the argument not at the end of the command,

 * switch to another user(su) but keep my environmment
      sudo su -p ANOTHER_USER ~
   '-p' is the answer!

===============================================================================


*linux-Gnome*
===============================================================================
                                            *gconftool-2*
NO 1. how to change the application's config under gnome(GConf)
    
    use the gconftool-2 tool to modify (view, set, get) the gnome application's 
configure. All the configures are organized in a virtual tree format.

   Examples: 
      # to view all the configures  
      $ gconftool-2 -R /  ~
 ~
      # to view all the configures about gnome desktop  
      $ gconftool-2 -R /desktop ~

    more details, invoke man gconftool-2. And there is a gui editor to handle
GConf, named gconf-editor, have a try :)

===============================================================================

*linux-Debian*
===============================================================================
 * valuable packages of debian
   debian-reference-en    # include a broad overview of the Debian system,
                          # very helpful to learn the rules of debian
   rute 


===============================================================================


*linux-readline*
===============================================================================
                                            *vi-insert*
NO 1. how to change the keybindings under vi-insert mode of readline?

    to modify it on the fly, use the following command: 

    $ help bind  # since bind is a bash builtin command, so use "help bind" to get help ~
    $ bind -m vi-command "\C-E":emacs-editing-mode ~
============================================================================== 

*linux-ssh* 
============================================================================== 
                                            *linux-ssh-option* 
                                            *linux-ssh-option-DynamicForward*
# how to use DynamicForward? 
  DynamicForward option will create a SOCKS tunnel on localhost, so webbrowser 
  can use this proxy to visit forbidden website easily, for example: 

     # create the SOCKS proxy tunnel ~
     $ ssh -D 8000 vincent@box.exoweb.net ~
     # after this command, ssh will act as a SOCKS server, it will listen to 8000 ~
     # port on localhost, then send the received request to box.exoweb.net, and use ~
     # the remote server(box.exoweb.net) to do the request ~
     # after that, config firefox to use the proxy localhost:8000 ~

  Also, it can be done in the ssh's config file: 

     Host box ~
        HostName box.exoweb.net ~
        User vincent ~
        DynamicForward 8000 ~

  Here ssh works as a SOCKS proxy server, it is very different from port forward. 
  To get more details, read some resource about SOCKS protocol.

  In fact, the DynamicForward option is about how to create a SOCKS proxy server 
  with ssh.

  This [http://thinkhole.org/wp/2006/05/10/howto-secure-firefox-and-im-with-putty/] article has a example on how to set up SOCKS from putty with some pictures(pictures are always good ;) ). Putty is also a very cool ssh client!

------------------------------------------------------------------------------
                                             *linux-ssh-option-ProxyCommand*
# how to use the ProxyCommand? 
  This option is for run a proxy command before make a ssh connection. For example:
  in ssh's config file:  
      Host * ~
          ProxyCommand corkscrew http-proxy.example.com 8080 %h %p ~
  then, when later run: ssh example.net , ssh will connect the example.net through 
  the http-proxy server. And this is very useful especailly when in a intranet that 
  all the outgoing ports are forbidden except 80 port for http, then we can use a 
  http-proxy server(use port 80) to visit outside ssh server, then do port forwarding,
  SOCKS proxy, etc all things you can do with ssh! Very powerful! 

  In fact, the ProxyCommand option is about using a proxy server in ssh. 

------------------------------------------------------------------------------

# a useful ssh command 

  dd if=filename.gz | ssh -c blowfish root@deadhost "gunzip -c | dd of=/dev/hda1 bs=1k" ~
 
# sshfs command
  the options are needed if we must run sshfs as root user
  sudo sshfs -o allow_other -o uid=1000 -o gid=1000 vincent@forge: forge ~

============================================================================== 


============================================================================== 

*python-twisted*
============================================================================== 
                                             *twisted-intro*
# Twisted: the framework of your internet!      

Twisted is very important framework for network programming, it can improve the 
effeciency of network programming a lot! Should investigate twisted if have time.

===============================================================================
                                                *twisted-Deferred*
# Twisted Deferred 

Twisted Deferred is a mechanism to support network asynchronous programming. By 
use defer, we can only write callback functions and all the other things will be 
taken care of by twisted. There are several ways to add callback/errback and this 
is often very confusing to understand the difference between them. Understanding
the truth under the hood will be very import, here I will try to demonstrate the 
concept of callback/errback.

Deferred.addCallbacks, Deferred.addCallback, Deferred.addErrback, Deferred.addBoth
can all set callback/errback to a Deferred object. But there are some difference.
Internelly, twisted use a list of callback pair(a callback plus a errback) to save 
the callbacks(visit http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto2
to get more details), addCallbacks is the main function to interact with Deferred,
and the other functions, like addCallback, addErrback and addBoth, are all the 
derivative of addCallbacks(visit http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto9 
for more details). 

Deferred.callback and Defferred.errback can only be called once, the second call will
raise an exception. And the callback/errback can be called before attach any callback/errback; 
after call callback/errback, the later added callbacks/errbacks will be called immediatelly 
when they are added.

===============================================================================

*python-tips*
===============================================================================
                                        *__file__*
# the meaning of __file__
  
  the __file__ variable is used to store the path name of the module. If the
  module within the same folder with the main script(NOTE: only the main
  script, not compared with the module that import this module), then path name is
  something like: ./MODULENAME.pyc ; otherwise, it will be a absolute path of 
  the module.
      /
       A/ 
        AA.py*
          B/
           C.py
           D.py
           EE.py*
  AA and EE are both executable, when run AA, AA will import B.C, and in B.C it
  will import D, the __file__ in D is /A/B/D.pyc.
  If run EE, EE will import D, then the __file__ in D is ./D.pyc

  In short, the __file__ is very useful when diagnose which module is actually
  imported from several modules with the same file name. 
===============================================================================

*my-network* 
===============================================================================
*my-network-netcat*

# netcat: a TCP/IP swiss knife tool! :)
  TODO: need to give some examples 

===============================================================================

*database*
===============================================================================
*database-sql*

# execution order of select sql statement 
    SELECT [ ALL | DISTINCT [ ON ( expression [, ...] ) ] ]   ~
        * | expression [ AS output_name ] [, ...]~
        [ FROM from_item [, ...] ]~
        [ WHERE condition ]~
        [ GROUP BY expression [, ...] ]~
        [ HAVING condition [, ...] ]~
        [ { UNION | INTERSECT | EXCEPT } [ ALL ] select ]~
        [ ORDER BY expression [ ASC | DESC | USING operator ] [, ...] ]~
        [ LIMIT { count | ALL } ]~
        [ OFFSET start ]~
        [ FOR UPDATE [ OF table_name [, ...] ] ]~

   "FROM ... WHERE ..." clause will be executed first, it will generate a
   working table in memory; 
   Then "GROUP BY ... HAVING" clause is executed on the working table and
   generate a new table in memory and as the new working table ; Aggregate
   functions are executed just after GROUP BY clause;
   Then the "ORDER BY ... LIMIT .. OFFSET ... FOR UPDATE ..." clause is
   executed on working table and the result becomes new working table;
   Finally, the "SELECT ..." clause is executed on the working table, and the
   output of it becomes the final result;

===============================================================================

*linux-xwindow*
===============================================================================

# how to get a window's id in X? 
  use xwininfo command, for example: 
  $ xwininfo <CR>
  then use mouse to specify the destination window;
===============================================================================

*linux-ctags*
===============================================================================
                                             *laszlo-tags*
# how to generate tags for a new language? 
  find . -type f -iname "*.lzx" | xargs ctags --langdef=lzx --langmap=lzx:.lzx  --regex-lzx='/<method\s*name="([^"]*)".*/\1/' --regex-lzx='/<class\s*name="([^"]*)".*/\1/'  ~
  --langdef will define the new language's name(here it is laszlo) for later use
  --langmap will specify which kind of file is source files of the new language, 
            we can specify multiple file extentions or file patterns  
  --regex-lzx will specify regular expression patterns for tags; you can specify 
              multiple regex for it

  that's all. seems simple, isn't it? And if ctags can not make you satisfied,
  you can use perl or python to generate the tags file since its format is
  very simple. 

*linux-files*
===============================================================================
# command about files operation on linux/unix
  $ lsof   # list all opened files 

  $ fuser -u FILENMAE # list all users who open FILENAME

  # 文件名里的空格替换为下划线
  # for i in $1 ; do mv "$i" `echo $i | sed 's/ /_/g'` ; done
        

*linux-mplayer*
===============================================================================
# how to install mplayer
in ubuntu and Debian, install mplayer package first, then we can install w32codecs package, or we can download codecs from mplayer's homesite, the "all-codecs*"
tar-ball or the "essential*" tar-ball. all these three package(w32codecs, "all-codecs*", "essential*") are almost the same, except "all-codecs*" includes all codecs; w32codecs includes most of the codecs; "essential*" includes the most essential codecs; 

mplayer is very powerful, it can not only play movies, but also convert media between different codecs; 

*linux-par*
===============================================================================
# use par to format paragraphs

read par's manpage for more details.

*linux-wget*
===============================================================================
# continue to download files 
use wget -c URL to start downloading, if there is problem with download, just
try to run it again with '-c' option, it will continue based on what has been
downloaded.


===============================================================================
*Mac* 

*Mac-mplayer* 
===============================================================================
# to play file from network, use following command to make it more smooth:
  mplayer -vo macosx -cache 8192 FILE

-------------------------------------------------------------------------------
NOTE: You need the noreadonly and modifiable keywords in the vim modeline above. help files are by default regarded as readonly and nomodifiable files by vim.
-------------------------------------------------------------------------------
 vim: filetype=help modifiable noreadonly ts=4 expandtab
